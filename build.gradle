/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    id 'maven'

}
compileJava {
  options.encoding = "UTF-8" 
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
version = '1.2.1'
group = 'org.sonatype.nexus.examples'

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
      url "${nexusUrl}/repository/maven-public"
    }
}

javadoc {
    classpath += sourceSets.test.compileClasspath
    source += sourceSets.test.allJava
}
dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile files("${System.properties['java.home']}/../lib/tools.jar")
    
    testCompile "junit:junit:4.12"
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    compile "org.jbundle.util:org.jbundle.util.jbackup:2.0.0"
    compile "net.sf.webtestfixtures:webtestfixtures:2.0.1.3"
    compile "org.shoal:shoal-gms-api:1.5.8"
    compile "org.ow2.util:util-i18n:1.0.22"
    compile "com.sun.grizzly:grizzly-lzma:1.9.19-beta5"
}

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "${nexusUrl}/repository/maven-releases") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(url: "${nexusUrl}/repository/maven-snapshots") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
    }
  }
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',  
        	'Implementation-Version': version,
        	'Main-Class': 'gui.RobotsProgram'
    }
    baseName = 'robots'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

jar{
   baseName = 'robots'
   version = '1.2.1'
   manifest {
       attributes 'Main-Class': 'gui.RobotsProgram' 
   }
}


sourceSets {
    main {
         java {
            srcDir 'src/main/java'
         }
    }

    test {
        java {
            srcDirs 'src/test/java'
        }
    }
}


// Define the main class for the application
mainClassName = 'gui.RobotsProgram'